/*************************************************************************************************/
/*!
\file System.h
\author Aiden Cvengros
\par email: ajcvengros\@gmail.com
\date 2023.9.9
\brief
    Creates the base system class that can be run by the game engine

    Public Functions:
        + System
		+ ~System
		+ Init
		+ Update
		+ Draw
		+ Shutdown
		
	Private Functions:

Copyright (c) 2023 Aiden Cvengros
*/
/*************************************************************************************************/

#ifndef Syncopatience_System_H_
#define Syncopatience_System_H_

#pragma once

//-------------------------------------------------------------------------------------------------
// Include Header Files
//-------------------------------------------------------------------------------------------------

#include "stdafx.h"

//-------------------------------------------------------------------------------------------------
// Forward References
//-------------------------------------------------------------------------------------------------

class Window;

//-------------------------------------------------------------------------------------------------
// Public Constants
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Classes
//-------------------------------------------------------------------------------------------------

/*************************************************************************************************/
/*!
	\brief
		The base class for game engine systems
*/
/*************************************************************************************************/
class System
{
public:
	//---------------------------------------------------------------------------------------------
	// Public Consts
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Variables
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Function Declarations
	//---------------------------------------------------------------------------------------------
	
	/*************************************************************************************************/
	/*!
		\brief
			Constructor for base system class
	*/
	/*************************************************************************************************/
	System();
	
	/*************************************************************************************************/
	/*!
		\brief
			Destructor for System class
	*/
	/*************************************************************************************************/
	~System();

	/*************************************************************************************************/
	/*!
		\brief
			Initializes the system. Virtual function that must be overwritten by derived class
	*/
	/*************************************************************************************************/
	virtual void Init() = 0;

	/*************************************************************************************************/
	/*!
		\brief
			Updates the system. Virtual function that must be overwritten by derived class

		\param
			The time elapsed since the previous frame.
	*/
	/*************************************************************************************************/
	virtual void Update(double dt) = 0;

	/*************************************************************************************************/
	/*!
		\brief
			Draws the system to the screen. Virtual function that must be overwritten by derived class

		\param window
			The window being drawn to
	*/
	/*************************************************************************************************/
	virtual void Draw(Window* window) = 0;

	/*************************************************************************************************/
	/*!
		\brief
			Shuts down the system. Virtual function that must be overwritten by derived class
	*/
	/*************************************************************************************************/
	virtual void Shutdown() = 0;
	
private:
	//---------------------------------------------------------------------------------------------
	// Private Consts
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Variables
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Function Declarations
	//---------------------------------------------------------------------------------------------
};

//-------------------------------------------------------------------------------------------------
// Public Variables
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Functions
//-------------------------------------------------------------------------------------------------

#endif // Syncopatience_System_H_
