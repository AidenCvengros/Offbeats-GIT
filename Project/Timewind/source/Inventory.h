/*************************************************************************************************/
/*!
\file Inventory.h
\author Aiden Cvengros
\par email: ajcvengros\@gmail.com
\date 2025.5.5
\brief
    The player's inventory manager

    Functions include:
        + [FILL]

Copyright (c) 2025 Aiden Cvengros
*/
/*************************************************************************************************/

#ifndef Syncopatience_Inventory_H_
#define Syncopatience_Inventory_H_

#pragma once

//-------------------------------------------------------------------------------------------------
// Include Header Files
//-------------------------------------------------------------------------------------------------

#include "stdafx.h"

#include "Game_Objects/Key.h"

#include <array>

//-------------------------------------------------------------------------------------------------
// Forward References
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Constants
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Classes
//-------------------------------------------------------------------------------------------------

/*************************************************************************************************/
/*!
	\brief
		The inventory manager class
*/
/*************************************************************************************************/
class Inventory
{
public:
	//---------------------------------------------------------------------------------------------
	// Public Consts
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Variables
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Function Declarations
	//---------------------------------------------------------------------------------------------
	
	/*************************************************************************************************/
	/*!
		\brief
			Constructor for the inventory class
	*/
	/*************************************************************************************************/
	Inventory() : keyList() {}

	/*************************************************************************************************/
	/*!
		 \brief
			Destructor for inventory class
	*/
	/*************************************************************************************************/
	~Inventory() {}

	/*************************************************************************************************/
	/*!
		\brief
			Adds the given item to the inventory

		\param newItem
			The new item to be added into the inventory
	*/
	/*************************************************************************************************/
	//void AddItem(Item* newItem) { itemList.push_back(newItem); }

	/*************************************************************************************************/
	/*!
		\brief
			Adds the given key to the inventory

		\param newKey
			The new key to be added into the inventory

		\return
			Returns true if the key was added. False if not
	*/
	/*************************************************************************************************/
	bool AddKey(Key* newKey);

	/*************************************************************************************************/
	/*!
		\brief
			Checks whether the player has a key of the given index

		\param keyIndex
			The index of the key being checked

		\return
			Whether the player has the key
	*/
	/*************************************************************************************************/
	bool HaveKey(int keyIndex) { return keyList[keyIndex] != NULL; }

private:
	//---------------------------------------------------------------------------------------------
	// Private Consts
	//---------------------------------------------------------------------------------------------

	//std::vector<Item*> itemList;				// The list of general items the player has
	std::array<Key*, 36> keyList;				// The list of keys the player has collected
	
	//---------------------------------------------------------------------------------------------
	// Private Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Variables
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Function Declarations
	//---------------------------------------------------------------------------------------------
};

//-------------------------------------------------------------------------------------------------
// Public Variables
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Functions
//-------------------------------------------------------------------------------------------------

#endif // Syncopatience_Inventory_H_
