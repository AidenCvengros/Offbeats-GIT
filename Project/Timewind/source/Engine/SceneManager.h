/*************************************************************************************************/
/*!
\file SceneManager.h
\author Aiden Cvengros
\par email: ajcvengros\@gmail.com
\date 2024.5.22
\brief
    Manages loading, unloading, and running scenes

    Functions include:
        + [FILL]

Copyright (c) 2023 Aiden Cvengros
*/
/*************************************************************************************************/

#ifndef Syncopatience_SceneManager_H_
#define Syncopatience_SceneManager_H_

#pragma once

//-------------------------------------------------------------------------------------------------
// Include Header Files
//-------------------------------------------------------------------------------------------------

#include "stdafx.h"

// Gets the base system class
#include "System.h"

// The scene class
#include "../Scenes/Scene.h"

// Uses vectors to hold the list of available scenes
#include <vector>

//-------------------------------------------------------------------------------------------------
// Forward References
//-------------------------------------------------------------------------------------------------

// Forward references the engine class to prevent header loops
class Engine;

// Dependency reference
class MapMatrix;

//-------------------------------------------------------------------------------------------------
// Public Constants
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Classes
//-------------------------------------------------------------------------------------------------

/*************************************************************************************************/
/*!
	\brief
		Manages scenes in the game
*/
/*************************************************************************************************/
class SceneManager : public System
{
public:
	//---------------------------------------------------------------------------------------------
	// Public Consts
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Variables
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Function Declarations
	//---------------------------------------------------------------------------------------------

	/*************************************************************************************************/
	/*!
		\brief
			Constructor for the texture manager class
	*/
	/*************************************************************************************************/
	SceneManager();

	/*************************************************************************************************/
	/*!
		\brief
			Destructor for the scene manager class
	*/
	/*************************************************************************************************/
	~SceneManager() {}

	/*************************************************************************************************/
	/*!
		\brief
			Initializes the scene manager (defaults to: sandbox)
	*/
	/*************************************************************************************************/
	void Init();

	/*************************************************************************************************/
	/*!
		\brief
			Updates the current scene

		\param
			The time elapsed since the previous frame.
	*/
	/*************************************************************************************************/
	void Update(double dt);

	/*************************************************************************************************/
	/*!
		\brief
			Draws the current scene (currently empty)
	*/
	/*************************************************************************************************/
	void Draw();

	/*************************************************************************************************/
	/*!
		\brief
			Shuts down the scene manager and the current scene
	*/
	/*************************************************************************************************/
	void Shutdown();

	/*************************************************************************************************/
	/*!
		\brief
			Gets the current scene being run

		\return
			The current scene
	*/
	/*************************************************************************************************/
	Scene* GetCurrentScene() { return sceneList[currentSceneIndex]; }
	
private:
	//---------------------------------------------------------------------------------------------
	// Private Consts
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Variables
	//---------------------------------------------------------------------------------------------

	std::vector<Scene*> sceneList;				// The list of scenes
	int currentSceneIndex;						// The index of the current scene
	int nextSceneIndex;							// The index of the next scene
	bool changeScene;							// Boolean telling whether the scene should change
	
	//---------------------------------------------------------------------------------------------
	// Private Function Declarations
	//---------------------------------------------------------------------------------------------
};

//-------------------------------------------------------------------------------------------------
// Public Variables
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Functions
//-------------------------------------------------------------------------------------------------

#endif // Syncopatience_SceneManager_H_
