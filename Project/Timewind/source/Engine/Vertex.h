/*************************************************************************************************/
/*!
\file Vertex.h
\author Aiden Cvengros
\par email: ajcvengros\@gmail.com
\date 2023.11.12
\brief
    Defines a vertex for drawing purposes

    Public Functions:
        + FILL
		
	Private Functions:
		+ FILL

Copyright (c) 2023 Aiden Cvengros
*/
/*************************************************************************************************/

#ifndef Syncopatience_Vertex_H_
#define Syncopatience_Vertex_H_

#pragma once

//-------------------------------------------------------------------------------------------------
// Include Header Files
//-------------------------------------------------------------------------------------------------

#include "stdafx.h"

// Includes glm libraries for vector math
#include <glm/glm.hpp>
#define VK_USE_PLATFORM_WIN32_KHR
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

// Vertex lists are stored in an array container
#include <array>

//-------------------------------------------------------------------------------------------------
// Forward References
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Constants
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Classes
//-------------------------------------------------------------------------------------------------

/*************************************************************************************************/
/*!
	\brief
		Defines a vertex for rendering purposes
*/
/*************************************************************************************************/
class Vertex
{
public:
	//---------------------------------------------------------------------------------------------
	// Public Consts
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Variables
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Public Function Declarations
	//---------------------------------------------------------------------------------------------
	
	/*************************************************************************************************/
	/*!
		\brief
			Constructor for vertex class
			
		\param pos_
			The position vector
			
		\param color_
			The color of the vertex

		\param texCoord_
			The texture coordinates of the vertex
	*/
	/*************************************************************************************************/
	Vertex(glm::vec2 pos_, glm::vec3 color_, glm::vec2 texCoord_) : pos(pos_), color(color_), texCoord(texCoord_) {}
	
	/*************************************************************************************************/
	/*!
		\brief
			Destructor for vertex class
	*/
	/*************************************************************************************************/
	~Vertex() {}

	/*************************************************************************************************/
	/*!
		\brief
			Gets the description that tells vulkan how to load vertices

		\return
			The description struct
	*/
	/*************************************************************************************************/
	static VkVertexInputBindingDescription getBindingDescription();

	/*************************************************************************************************/
	/*!
		\brief
			Defines how vertices are laid out in memory

		\return
			The description structs (position and color)
	*/
	/*************************************************************************************************/
	static std::array<VkVertexInputAttributeDescription, 3> getAttributeDescriptions();
	
private:
	//---------------------------------------------------------------------------------------------
	// Private Consts
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Structures
	//---------------------------------------------------------------------------------------------
	
	//---------------------------------------------------------------------------------------------
	// Private Variables
	//---------------------------------------------------------------------------------------------
	
	glm::vec2 pos;								// The position vector
	glm::vec3 color;							// The color of the vertex
	glm::vec2 texCoord;							// The texture coordinates

	//---------------------------------------------------------------------------------------------
	// Private Function Declarations
	//---------------------------------------------------------------------------------------------
};

//-------------------------------------------------------------------------------------------------
// Public Variables
//-------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
// Public Functions
//-------------------------------------------------------------------------------------------------

#endif // Syncopatience_Vertex_H_
